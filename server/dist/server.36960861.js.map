{"mappings":"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;A,qD;A,qD;A,gD;A,iD;A,6C;A,6C;A,iD;A,4C;A,+C;A,gD;A,+C;A,iD;A,mD;A,4D;A,gD;A,8D;A,+D;A,+D;A,gF;A,qD;A,oE;A,2D;A,8C;A,oE;A,yE;A,oD;A,4D;A,oD;A,sD;A,uD;A,kD;A,oD;A,gD;A,kD;A,mD;A,4D;A,oD;A,sD;A,yD;A,2D;A,uD;A,iE;A,mE;A,qD;A,oD;A,iD;A,qD;A,6C;A,qD;A,uD;A,8C;A,qD;A,+C;A,gD;A,2D;A,6C;A,+C;A,iD;A,qD;A,kD;A,oD;A,qD;A,uD;A,qD;A,uD;A,gD;A,kD;A,4D;A,8C;A,4D;A,8C;A,2C;A,6D;A,2D;A,wD;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;;AE/GA;;;;;;;CAOA,GACO,MAAM,0BAA0B,CAAA,GAAA,wBAAY,AAAZ;IACvC;;;GAGA,GACE,YAAa,IAAI,EAAE,SAAS,CAAE;QAC5B,KAAK;QACL,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,SAAS,GAAG;IACrB;AACA;ACTO,MAAM;IACb;;;GAGA,GACE,YAAa,KAAK,EAAE,GAAG,CAAE;QAC3B;;KAEA,GACI,IAAI,CAAC,KAAK,GAAG;QACjB;;KAEA,GACI,IAAI,CAAC,GAAG,GAAG;IACf;AACA;AAEA;;;;;;CAMA,GACO,MAAM;IACX,aAAe;QACjB;;KAEA,GACI,IAAI,CAAC,OAAO,GAAG,IAAI;IACvB;AACA;AAEA;;;;;;;;CAQA,GACY,MAAC,wBAAwB,CAAC,aAAa,IAAI,IACrD,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS;QAC3B,MAAM,UAAO,2BAAA,GAAkC,YAAY,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;QACjF,IAAI,WAAW,MAAM;YACnB,MAAM,aAAa,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAC;YAC7C,MAAM,aAAa,WAAW,EAAE,CAAC,KAAK,GAAG,WAAW,MAAA;YACpD,IAAK,IAAI,IAAI,GAAG,MAAM,OAAO,CAAC,EAAE,EAAE,IAAI,QAAQ,MAAM,IAAI,IAAI,KAAK,GAAG,YAAY,MAAM,OAAO,CAAC,EAAE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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-f9f57416d810dc00.js","main.js","node_modules/yjs/dist/yjs.mjs","node_modules/yjs/src/utils/AbstractConnector.js","node_modules/yjs/src/utils/DeleteSet.js","node_modules/yjs/src/utils/Doc.js","node_modules/yjs/src/utils/UpdateDecoder.js","node_modules/yjs/src/utils/UpdateEncoder.js","node_modules/yjs/src/utils/encoding.js","node_modules/yjs/src/utils/EventHandler.js","node_modules/yjs/src/utils/ID.js","node_modules/yjs/src/utils/isParentOf.js","node_modules/yjs/src/utils/logging.js","node_modules/yjs/src/utils/PermanentUserData.js","node_modules/yjs/src/utils/RelativePosition.js","node_modules/yjs/src/utils/Snapshot.js","node_modules/yjs/src/utils/StructStore.js","node_modules/yjs/src/utils/Transaction.js","node_modules/yjs/src/utils/UndoManager.js","node_modules/yjs/src/utils/updates.js","node_modules/yjs/src/utils/YEvent.js","node_modules/yjs/src/types/AbstractType.js","node_modules/yjs/src/types/YArray.js","node_modules/yjs/src/types/YMap.js","node_modules/yjs/src/types/YText.js","node_modules/yjs/src/types/YXmlFragment.js","node_modules/yjs/src/types/YXmlElement.js","node_modules/yjs/src/types/YXmlEvent.js","node_modules/yjs/src/types/YXmlHook.js","node_modules/yjs/src/types/YXmlText.js","node_modules/yjs/src/structs/AbstractStruct.js","node_modules/yjs/src/structs/GC.js","node_modules/yjs/src/structs/ContentBinary.js","node_modules/yjs/src/structs/ContentDeleted.js","node_modules/yjs/src/structs/ContentDoc.js","node_modules/yjs/src/structs/ContentEmbed.js","node_modules/yjs/src/structs/ContentFormat.js","node_modules/yjs/src/structs/ContentJSON.js","node_modules/yjs/src/structs/ContentAny.js","node_modules/yjs/src/structs/ContentString.js","node_modules/yjs/src/structs/ContentType.js","node_modules/yjs/src/structs/Item.js","node_modules/yjs/src/structs/Skip.js","node_modules/yjs/src/index.js","node_modules/lib0/observable.js","node_modules/lib0/map.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/lib0/set.js","node_modules/lib0/array.js","node_modules/lib0/math.js","node_modules/lib0/encoding.js","node_modules/lib0/number.js","node_modules/lib0/binary.js","node_modules/lib0/string.js","node_modules/lib0/decoding.js","node_modules/lib0/error.js","node_modules/lib0/random.js","node_modules/lib0/webcrypto.js","node_modules/lib0/promise.js","node_modules/lib0/time.js","node_modules/lib0/metric.js","node_modules/lib0/buffer.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/lib0/environment.js","node_modules/process/browser.js","node_modules/lib0/conditions.js","node_modules/lib0/storage.js","node_modules/lib0/function.js","node_modules/lib0/object.js","node_modules/lib0/traits.js","node_modules/lib0/logging.js","node_modules/lib0/pair.js","node_modules/lib0/dom.js","node_modules/lib0/json.js","node_modules/lib0/eventloop.js","node_modules/lib0/logging.common.js","node_modules/lib0/symbol.js","node_modules/lib0/iterator.js","node_modules/y-websocket/src/y-websocket.js","node_modules/lib0/broadcastchannel.js","node_modules/y-protocols/sync.js","node_modules/y-protocols/auth.js","node_modules/y-protocols/awareness.js","node_modules/lib0/url.js","node_modules/y-quill/src/y-quill.js","node_modules/socket.io-client/build/esm/index.js","node_modules/socket.io-client/build/esm/url.js","node_modules/engine.io-client/build/esm/index.js","node_modules/engine.io-client/build/esm/socket.js","node_modules/engine.io-client/build/esm/transports/index.js","node_modules/engine.io-client/build/esm/transports/polling-xhr.js","node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/engine.io-client/build/esm/transport.js","node_modules/engine.io-parser/build/esm/index.js","node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/engine.io-parser/build/esm/commons.js","node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/@socket.io/component-emitter/lib/esm/index.js","node_modules/engine.io-client/build/esm/util.js","node_modules/engine.io-client/build/esm/globals.js","node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/engine.io-client/build/esm/transports/polling-fetch.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/contrib/backo2.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"ba2beaa036960861\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import * as Y from 'yjs'\nimport { WebsocketProvider } from 'y-websocket'\nimport { QuillBinding } from 'y-quill'\nimport { io } from 'socket.io-client'\n\nvar socket = io('http://localhost:4000');\nconst ydoc = new Y.Doc();\nconst provider = new window.ywebsocket.WebSocketProvider('ws://localhost:1234', 'quill-room', ydoc);\nconst user = {\n  name: \"Sen\",\n  color: '#0080ff'\n}\nconst quill = new Quill('#editor-container', {\n  theme: 'snow'\n});\nconst ytext = ydoc.getText('quill');\nconst binding = new window.YQuill.QuillBinding(ytext, quill, provider.awareness);\nprovider.awareness.setLocalStateField('user', {\n  name: 'Sen',\n  color: '#0080ff'\n});\nconst shareButton = document.getElementById(\"share-btn\");\nconst docTitle = document.getElementById(\"doc-title\");\nconst editor1 = document.getElementById(\"editor\");\nconst avatar = document.getElementById(\"avatar\");\nconst menuOptions = document.getElementById(\"menu-options\");\nconst bolder = document.getElementById(\"bold\");\nconst italic = document.getElementById(\"italic\");\nconst underline = document.getElementById(\"underline\");\nconst colorButton = document.getElementById(\"color-btn\");\nconst colorPicker = document.getElementById(\"color-picker\");\nconst clientsTotal = document.getElementById('clients-total');\nconst colors = ['#34a853', '#fbbc05', '#4285f4', '#ff6d01', '#46bdc6', '#d61d1d']\n\n\nshareButton.addEventListener(\"click\", async () => {\n  const content = editor.innerHTML;\n  const title = docTitle.value || \"Adsız Belge\";\n\n  try {\n    const res = await fetch(\"/save\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ title, content }),\n    });\n\n    const result = await res.json();\n    if (result.success) {\n      alert(`Belge başarıyla kaydedildi. Versiyon: ${result.version}`);\n    }\n  } catch (err) {\n    alert(\"Bir hata oluştu.\");\n    console.error(err);\n  }\n});\nfunction setFont(fontName) {\n  editor.style.fontFamily = fontName\n}\nfunction setSize(size) {\n  editor.style.fontSize = size + \"px\"\n}\nfunction setColor(color) {\n  editor.style.color = color\n}\nconst fontSelect = document.getElementById(\"font-select\");\nfontSelect.addEventListener(\"change\", function(e) {\n  setFont(e.target.value);\n});\nconst fontSizeSelect = document.getElementById(\"font-size-select\");\nfontSizeSelect.addEventListener(\"change\", function(e) {\n  setSize(e.target.value)\n})\nbolder.addEventListener(\"click\", () => {\n  document.execCommand(\"bold\");\n})\nitalic.addEventListener(\"click\", () => {\n  document.execCommand(\"italic\");\n})\nunderline.addEventListener(\"click\", () => {\n  document.execCommand(\"underline\");\n})\n\ncolorButton.addEventListener(\"click\", (e) => {\n  e.stopPropagation();\n  const isVisible = colorPicker.style.display === \"block\";\n  colorPicker.style.display = isVisible ? \"none\" : \"block\";\n\n  const rect = colorButton.getBoundingClientRect();\n  colorPicker.style.top = `${rect.bottom + window.scrollY}px`;\n  colorPicker.style.left = `${rect.left + window.scrollX}px`;\n});\n\ndocument.addEventListener(\"click\", () => {\n  colorPicker.style.display = \"none\";\n});\n/*burada ufak hatalar var, düzelecek */\ndocument.querySelectorAll(\".color-option\").forEach((option) => {\n  option.addEventListener(\"click\", (e) => {\n    e.stopPropagation();\n    const color = option.dataset.color;\n\n    // Editör içine odaklan\n    document.getElementById(\"editor\").focus();\n\n    // execCommand ile renk uygula\n    document.execCommand(\"styleWithCSS\", false, true);\n    document.execCommand(\"foreColor\", false, color);\n\n    colorPicker.style.display = \"none\";\n  });\n});\n\nsocket.on('clients-total', (data) => {\n  const clientsTotal = document.getElementById('clients-total');\n  if (clientsTotal) {\n    clientsTotal.innerText = `Toplam Kullanıcı: ${data}`;\n  }\n});",null,"import { ObservableV2 } from 'lib0/observable'\n\nimport {\n  Doc // eslint-disable-line\n} from '../internals.js'\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {ObservableV2<any>}\n */\nexport class AbstractConnector extends ObservableV2 {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super()\n    this.doc = ydoc\n    this.awareness = awareness\n  }\n}\n","import {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    if (structs != null) {\n      const lastStruct = structs[structs.length - 1]\n      const clockState = lastStruct.id.clock + lastStruct.length\n      for (let i = 0, del = deletes[i]; i < deletes.length && del.clock < clockState; del = deletes[++i]) {\n        iterateStructs(transaction, structs, del.clock, del.len, f)\n      }\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal()\n      encoding.writeVarUint(encoder.restEncoder, client)\n      const len = dsitems.length\n      encoding.writeVarUint(encoder.restEncoder, len)\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i]\n        encoder.writeDsClock(item.clock)\n        encoder.writeDsLen(item.len)\n      }\n    })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]))\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nexport const equalDeleteSets = (ds1, ds2) => {\n  if (ds1.clients.size !== ds2.clients.size) return false\n  for (const [client, deleteItems1] of ds1.clients.entries()) {\n    const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ (ds2.clients.get(client))\n    if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i]\n      const di2 = deleteItems2[i]\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlElement,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { ObservableV2 } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\nimport * as promise from 'lib0/promise'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * @typedef {Object} DocEvents\n * @property {function(Doc):void} DocEvents.destroy\n * @property {function(Doc):void} DocEvents.load\n * @property {function(boolean, Doc):void} DocEvents.sync\n * @property {function(Uint8Array, any, Doc, Transaction):void} DocEvents.update\n * @property {function(Uint8Array, any, Doc, Transaction):void} DocEvents.updateV2\n * @property {function(Doc):void} DocEvents.beforeAllTransactions\n * @property {function(Transaction, Doc):void} DocEvents.beforeTransaction\n * @property {function(Transaction, Doc):void} DocEvents.beforeObserverCalls\n * @property {function(Transaction, Doc):void} DocEvents.afterTransaction\n * @property {function(Transaction, Doc):void} DocEvents.afterTransactionCleanup\n * @property {function(Doc, Array<Transaction>):void} DocEvents.afterAllTransactions\n * @property {function({ loaded: Set<Doc>, added: Set<Doc>, removed: Set<Doc> }, Doc, Transaction):void} DocEvents.subdocs\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends ObservableV2<DocEvents>\n */\nexport class Doc extends ObservableV2 {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    this.collectionid = collectionid\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = shouldLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false\n    this.isDestroyed = false\n    /**\n     * Promise that resolves once the document has been loaded from a persistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true\n        resolve(this)\n      })\n    })\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler)\n          resolve()\n        }\n      }\n      this.on('sync', eventHandler)\n    })\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise()\n      }\n      this.isSynced = isSynced === undefined || isSynced === true\n      if (this.isSynced && !this.isLoaded) {\n        this.emit('load', [this])\n      }\n    })\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise()\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `ydoc.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `ydoc.get(name, Y.Array) === ydoc.get(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `ydoc.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Y.Doc instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @template {typeof AbstractType<any>} Type\n   * @example\n   *   const ydoc = new Y.Doc(..)\n   *   const appState = {\n   *     document: ydoc.getText('document')\n   *     comments: ydoc.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Type} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {InstanceType<Type>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = /** @type {any} */ (AbstractType)) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return /** @type {InstanceType<Type>} */ (t)\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return /** @type {InstanceType<Type>} */ (type)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    return /** @type {YArray<T>} */ (this.get(name, YArray))\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    return /** @type {YMap<T>} */ (this.get(name, YMap))\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlElement}\n   *\n   * @public\n   */\n  getXmlElement (name = '') {\n    return /** @type {YXmlElement<{[key:string]:string}>} */ (this.get(name, YXmlElement))\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    this.isDestroyed = true\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false })\n      content.doc._item = item\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    // @ts-ignore\n    this.emit('destroyed', [true]) // DEPRECATED!\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n}\n","import * as buffer from 'lib0/buffer'\nimport * as decoding from 'lib0/decoding'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n","import * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next unique key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(clock)\n    }\n  }\n}\n","/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as array from 'lib0/array'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((_clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    writeStructs(encoder, /** @type {Array<GC|Item>} */ (store.clients.get(client)), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // left\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // left\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is equal to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const inapplicableItems = clientsStructRefs.get(client)\n      if (inapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        inapplicableItems.i--\n        restStructs.clients.set(client, inapplicableItems.refs.slice(inapplicableItems.i))\n        clientsStructRefs.delete(client)\n        inapplicableItems.i = 0\n        inapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts a decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts a decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n","import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","import { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","import { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n","import {\n  AbstractType // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nexport const logType = type => {\n  const res = []\n  let n = type._start\n  while (n) {\n    res.push(n)\n    n = n.right\n  }\n  console.log('Children: ', res)\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\n}\n","import {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding'\n\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add initial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = new DSEncoderV1()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoder.toUint8Array()])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoder.toUint8Array()])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n","import {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  getItem,\n  StructStore, ID, Doc, AbstractType, // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as error from 'lib0/error'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the character\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname ?? null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {StructStore} store\n * @param {ID} id\n */\nconst getItemWithOffset = (store, id) => {\n  const item = getItem(store, id)\n  const diff = id.clock - item.id.clock\n  return {\n    item, diff\n  }\n}\n\n/**\n * Transform a relative position to an absolute position.\n *\n * If you want to share the relative position with other users, you should set\n * `followUndoneDeletions` to false to get consistent results across all clients.\n *\n * When calculating the absolute position, we try to follow the \"undone deletions\". This yields\n * better results for the user who performed undo. However, only the user who performed the undo\n * will get the better results, the other users don't know which operations recreated a deleted\n * range of content. There is more information in this ticket: https://github.com/yjs/yjs/issues/638\n *\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @param {boolean} followUndoneDeletions - whether to follow undone deletions - see https://github.com/yjs/yjs/issues/638\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc, followUndoneDeletions = true) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followUndoneDeletions ? followRedone(store, rightID) : getItemWithOffset(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followUndoneDeletions ? followRedone(store, typeID) : { item: getItem(store, typeID) }\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n","import {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  LazyStructReader,\n  equalDeleteSets,\n  UpdateDecoderV1, UpdateDecoderV2, DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item, // eslint-disable-line\n  mergeDeleteSets\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, _item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('Garbage-collection must be disabled in `originDoc`!')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */\nexport const snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n    if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) {\n      return false\n    }\n  }\n  const mergedDS = mergeDeleteSets([snapshot.ds, readDeleteSet(updateDecoder)])\n  return equalDeleteSets(snapshot.ds, mergedDS)\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */\nexport const snapshotContainsUpdate = (snapshot, update) => snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1)\n","import {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integrityCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrity check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","import {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  cleanupYTextAfterTransaction,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const ydoc = new Y.Doc()\n * const map = ydoc.getMap('map')\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * ydoc.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n    /**\n     * @type {boolean}\n     */\n    this._needFormattingCleanup = false\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */\nconst tryToMergeWithLefts = (structs, pos) => {\n  let right = structs[pos]\n  let left = structs[pos - 1]\n  let i = pos\n  for (; i > 0; right = left, left = structs[--i - 1]) {\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n      if (left.mergeWith(right)) {\n        if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n          /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n        }\n        continue\n      }\n    }\n    break\n  }\n  const merged = pos - i\n  if (merged) {\n    // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged)\n  }\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiency and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[si]\n      ) {\n        si -= 1 + tryToMergeWithLefts(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              )\n            events\n              .forEach(event => {\n                event.currentTarget = type\n                // path is relative to the current target\n                event._path = null\n              })\n            // sort events by path length so that top-level events are fired first.\n            events\n              .sort((event1, event2) => event1.path.length - event2.path.length)\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction)\n          }\n        })\n      })\n      fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      callAll(fs, [])\n      if (transaction._needFormattingCleanup) {\n        cleanupYTextAfterTransaction(transaction)\n      }\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos;) {\n            i -= 1 + tryToMergeWithLefts(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = mergeStructs.length - 1; i >= 0; i--) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) {\n            continue // no need to perform next check, both are already merged\n          }\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLefts(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n        doc.clientID = generateNewClientId()\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid\n          }\n          doc.subdocs.add(subdoc)\n        })\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction])\n        subdocsRemoved.forEach(subdoc => subdoc.destroy())\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  /**\n   * @type {any}\n   */\n  let result = null\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    result = f(doc._transaction)\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0]\n      doc._transaction = null\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0)\n      }\n    }\n  }\n  return result\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  YEvent, Transaction, Doc, Item, GC, DeleteSet, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport * as array from 'lib0/array'\nimport * as logging from 'lib0/logging'\nimport { ObservableV2 } from 'lib0/observable'\n\nexport class StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => type === tr.doc || isParentOf(/** @type {AbstractType<any>} */ (type), item))) {\n      keepItem(item, false)\n    }\n  })\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {'undo'|'redo'} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && undoManager.currStackItem === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => type === transaction.doc || isParentOf(/** @type {AbstractType<any>} */ (type), /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => type === transaction.doc || isParentOf(/** @type {AbstractType<any>} */ (type), struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      undoManager.currStackItem = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  const res = undoManager.currStackItem\n  if (res != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: res, type: eventType, changedParentTypes, origin: undoManager }, undoManager])\n    undoManager.currStackItem = null\n  }\n  return res\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * @typedef {Object} StackItemEvent\n * @property {StackItem} StackItemEvent.stackItem\n * @property {any} StackItemEvent.origin\n * @property {'undo'|'redo'} StackItemEvent.type\n * @property {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>} StackItemEvent.changedParentTypes\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {ObservableV2<{'stack-item-added':function(StackItemEvent, UndoManager):void, 'stack-item-popped': function(StackItemEvent, UndoManager):void, 'stack-cleared': function({ undoStackCleared: boolean, redoStackCleared: boolean }):void, 'stack-item-updated': function(StackItemEvent, UndoManager):void }>}\n */\nexport class UndoManager extends ObservableV2 {\n  /**\n   * @param {Doc|AbstractType<any>|Array<AbstractType<any>>} typeScope Limits the scope of the UndoManager. If this is set to a ydoc instance, all changes on that ydoc will be undone. If set to a specific type, only changes on that type or its children will be undone. Also accepts an array of types.\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = _tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope instanceof Doc ? typeScope : typeScope.doc)\n  } = {}) {\n    super()\n    /**\n     * @type {Array<AbstractType<any> | Doc>}\n     */\n    this.scope = []\n    this.doc = doc\n    this.addToScope(typeScope)\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    this.captureTransaction = captureTransaction\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    /**\n     * The currently popped stack item if UndoManager.undoing or UndoManager.redoing\n     *\n     * @type {StackItem|null}\n     */\n    this.currStackItem = null\n    this.lastChange = 0\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges\n    this.captureTimeout = captureTimeout\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(/** @type {AbstractType<any>} */ (type)) || type === this.doc) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true)\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      let didAdd = false\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n        didAdd = true\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => type === transaction.doc || isParentOf(/** @type {AbstractType<any>} */ (type), item))) {\n          keepItem(item, true)\n        }\n      })\n      /**\n       * @type {[StackItemEvent, UndoManager]}\n       */\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent)\n      } else {\n        this.emit('stack-item-updated', changeEvent)\n      }\n    }\n    this.doc.on('afterTransaction', this.afterTransactionHandler)\n    this.doc.on('destroy', () => {\n      this.destroy()\n    })\n  }\n\n  /**\n   * Extend the scope.\n   *\n   * @param {Array<AbstractType<any> | Doc> | AbstractType<any> | Doc} ytypes\n   */\n  addToScope (ytypes) {\n    const tmpSet = new Set(this.scope)\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes]\n    ytypes.forEach(ytype => {\n      if (!tmpSet.has(ytype)) {\n        tmpSet.add(ytype)\n        if (ytype instanceof AbstractType ? ytype.doc !== this.doc : ytype !== this.doc) logging.warn('[yjs#509] Not same Y.Doc') // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n        this.scope.push(ytype)\n      }\n    })\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin)\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.undoStack = []\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.redoStack = []\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }])\n      })\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this)\n    this.doc.off('afterTransaction', this.afterTransactionHandler)\n    super.destroy()\n  }\n}\n","import * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\nimport * as f from 'lib0/function'\nimport * as logging from 'lib0/logging'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as string from 'lib0/string'\n\nimport {\n  ContentAny,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentString,\n  ContentType,\n  createID,\n  decodeStateVector,\n  DSEncoderV1,\n  DSEncoderV2,\n  GC,\n  Item,\n  mergeDeleteSets,\n  readDeleteSet,\n  readItemContent,\n  Skip,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  writeDeleteSet,\n  YXmlElement,\n  YXmlHook\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */\n\n/**\n * @param {ObfuscatorOptions} obfuscator\n */\nconst createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {}) => {\n  let i = 0\n  const mapKeyCache = map.create()\n  const nodeNameCache = map.create()\n  const formattingKeyCache = map.create()\n  const formattingValueCache = map.create()\n  formattingValueCache.set(null, null) // end of a formatting range should always be the end of a formatting range\n  /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */\n  return block => {\n    switch (block.constructor) {\n      case GC:\n      case Skip:\n        return block\n      case Item: {\n        const item = /** @type {Item} */ (block)\n        const content = item.content\n        switch (content.constructor) {\n          case ContentDeleted:\n            break\n          case ContentType: {\n            if (yxml) {\n              const type = /** @type {ContentType} */ (content).type\n              if (type instanceof YXmlElement) {\n                type.nodeName = map.setIfUndefined(nodeNameCache, type.nodeName, () => 'node-' + i)\n              }\n              if (type instanceof YXmlHook) {\n                type.hookName = map.setIfUndefined(nodeNameCache, type.hookName, () => 'hook-' + i)\n              }\n            }\n            break\n          }\n          case ContentAny: {\n            const c = /** @type {ContentAny} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentBinary: {\n            const c = /** @type {ContentBinary} */ (content)\n            c.content = new Uint8Array([i])\n            break\n          }\n          case ContentDoc: {\n            const c = /** @type {ContentDoc} */ (content)\n            if (subdocs) {\n              c.opts = {}\n              c.doc.guid = i + ''\n            }\n            break\n          }\n          case ContentEmbed: {\n            const c = /** @type {ContentEmbed} */ (content)\n            c.embed = {}\n            break\n          }\n          case ContentFormat: {\n            const c = /** @type {ContentFormat} */ (content)\n            if (formatting) {\n              c.key = map.setIfUndefined(formattingKeyCache, c.key, () => i + '')\n              c.value = map.setIfUndefined(formattingValueCache, c.value, () => ({ i }))\n            }\n            break\n          }\n          case ContentJSON: {\n            const c = /** @type {ContentJSON} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentString: {\n            const c = /** @type {ContentString} */ (content)\n            c.str = string.repeat((i % 10) + '', c.str.length)\n            break\n          }\n          default:\n            // unknown content type\n            error.unexpectedCase()\n        }\n        if (item.parentSub) {\n          item.parentSub = map.setIfUndefined(mapKeyCache, item.parentSub, () => i + '')\n        }\n        i++\n        return block\n      }\n      default:\n        // unknown block-type\n        error.unexpectedCase()\n    }\n  }\n}\n\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdate = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdateV2 = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, f.id, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, f.id, UpdateDecoderV2, UpdateEncoderV1)\n","import {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\nimport * as error from 'lib0/error'\n\nconst errorComputeChanges = 'You must not compute changes after the event-handler fired.'\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n    /**\n     * @type {Array<string|number>|null}\n     */\n    this._path = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    return this._path || (this._path = getPathTo(this.currentTarget, this.target))\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted && c.countable) {\n          i += c.length\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n","import {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\nimport * as log from 'lib0/logging'\n\n/**\n * https://docs.yjs.dev/getting-started/working-with-shared-types#caveats\n */\nexport const warnPrematureAccess = () => { log.warn('Invalid access: Add Yjs type to a document before reading data.') }\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengths == null) {\n  //     window.lengths = []\n  //     window.getLengths = () => window.lengths.sort((a, b) => a - b)\n  //   }\n  //   window.lengths.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  t.doc ?? warnPrematureAccess()\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  type.doc ?? warnPrematureAccess()\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  type.doc ?? warnPrematureAccess()\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on every element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  type.doc ?? warnPrematureAccess()\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on every element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  type.doc ?? warnPrematureAccess()\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c)\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c)\n          break\n        default:\n          packJsonContent()\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n              left.integrate(transaction, 0)\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n              left.integrate(transaction, 0)\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n                left.integrate(transaction, 0)\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = () => error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded()\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the search marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start })\n  let n = marker.p\n  if (n) {\n    while (n.right) {\n      n = n.right\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded()\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  parent.doc ?? warnPrematureAccess()\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent.doc ?? warnPrematureAccess()\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  parent.doc ?? warnPrematureAccess()\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {Snapshot} snapshot\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAllSnapshot = (parent, snapshot) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    /**\n     * @type {Item|null}\n     */\n    let v = value\n    while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n      v = v.left\n    }\n    if (v !== null && isVisible(v, snapshot)) {\n      res[key] = v.content.getContent()[v.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any> & { _map: Map<string, Item> }} type\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = type => {\n  type.doc ?? warnPrematureAccess()\n  return iterator.iteratorFilter(type._map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n}\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListPushGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  warnPrematureAccess,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nexport class YArrayEvent extends YEvent {}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ))\n    return arr\n  }\n\n  get length () {\n    this.doc ?? warnPrematureAccess()\n    return this._length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content)\n    }\n  }\n\n  /**\n   * Prepends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to prepend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Returns a portion of this YArray into a JavaScript Array selected\n   * from start to end (end not included).\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function once on every element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYArray = _decoder => new YArray()\n","/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  warnPrematureAccess,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<[string, MapType]>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    this.doc ?? warnPrematureAccess()\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<MapType>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this), /** @param {any} v */ v => /** @type {any} */ ([v[0], v[1].content.getContent()[v[1].length - 1]]))\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this.doc ?? warnPrematureAccess()\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value))\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYMap = _decoder => new YMap()\n","/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ContentType,\n  warnPrematureAccess,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {boolean} useSearchMarker\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index, useSearchMarker) => {\n  const currentAttributes = new Map()\n  const marker = useSearchMarker ? findMarker(parent, index) : null\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] ?? null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) ?? null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text))\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          } else {\n            currPos.currentAttributes.set(key, value)\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create()\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content)\n      endFormats.set(cf.key, cf)\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  let reachedCurr = false\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true\n    }\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          const startAttrValue = startAttributes.get(key) ?? null\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n            if (!reachedCurr && (currAttributes.get(key) ?? null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key)\n              } else {\n                currAttributes.set(key, startAttrValue)\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content))\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * This will be called by the transaction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */\nexport const cleanupYTextAfterTransaction = transaction => {\n  /**\n   * @type {Set<YText>}\n   */\n  const needFullCleanup = new Set()\n  // check if another formatting item was inserted\n  const doc = transaction.doc\n  for (const [client, afterClock] of transaction.afterState.entries()) {\n    const clock = transaction.beforeState.get(client) || 0\n    if (afterClock === clock) {\n      continue\n    }\n    iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n      if (\n        !item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat && item.constructor !== GC\n      ) {\n        needFullCleanup.add(/** @type {any} */ (item).parent)\n      }\n    })\n  }\n  // cleanup in a new transaction\n  transact(doc, (t) => {\n    iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n      if (item instanceof GC || !(/** @type {YText} */ (item.parent)._hasFormatting) || needFullCleanup.has(/** @type {YText} */ (item.parent))) {\n        return\n      }\n      const parent = /** @type {YText} */ (item.parent)\n      if (item.content.constructor === ContentFormat) {\n        needFullCleanup.add(parent)\n      } else {\n        // If no formatting attribute was inserted or deleted, we can make due with contextless\n        // formatting cleanups.\n        // Contextless: it is not necessary to compute currentAttributes for the affected position.\n        cleanupContextlessFormattingGap(t, item)\n      }\n    })\n    // If a formatting item was inserted, we simply clean the whole type.\n    // We need to compute currentAttributes for the current position anyway.\n    for (const yText of needFullCleanup) {\n      cleanupYTextFormatting(yText)\n    }\n  })\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes)\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For more information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op = null\n            switch (action) {\n              case 'delete':\n                if (deleteLen > 0) {\n                  op = { delete: deleteLen }\n                }\n                deleteLen = 0\n                break\n              case 'insert':\n                if (typeof insert === 'object' || insert.length > 0) {\n                  op = { insert }\n                  if (currentAttributes.size > 0) {\n                    op.attributes = {}\n                    currentAttributes.forEach((value, key) => {\n                      if (value !== null) {\n                        op.attributes[key] = value\n                      }\n                    })\n                  }\n                }\n                insert = ''\n                break\n              case 'retain':\n                if (retain > 0) {\n                  op = { retain }\n                  if (!object.isEmpty(attributes)) {\n                    op.attributes = object.assign({}, attributes)\n                  }\n                }\n                retain = 0\n                break\n            }\n            if (op) delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = item.content.getContent()[0]\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) ?? null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) ?? null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) ?? null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>|null}\n     */\n    this._searchMarker = []\n    /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */\n    this._hasFormatting = false\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    this.doc ?? warnPrematureAccess()\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local && this._hasFormatting) {\n      transaction._needFormattingCleanup = true\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    this.doc ?? warnPrematureAccess()\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {Array<any>} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    this.doc ?? warnPrematureAccess()\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot)\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot)\n        }\n        computeDelta()\n      }, 'cleanup')\n    } else {\n      computeDelta()\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, !attributes)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} [attributes] Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, !attributes)\n        insertText(transaction, this, pos, embed, attributes || {})\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes || {}))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index, true), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, false)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = _decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  warnPrematureAccess,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as array from 'lib0/array'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n    root.doc ?? warnPrematureAccess()\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            /**\n             * @type {Item | null}\n             */\n            const nxt = n.next\n            if (nxt !== null) {\n              n = nxt\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    this.doc ?? warnPrematureAccess()\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Prepends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to prepend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Returns a portion of this YXmlFragment into a JavaScript Array selected\n   * from start to end (end not included).\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on every child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = _decoder => new YXmlFragment()\n","import * as object from 'lib0/object'\n\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeMapGetAllSnapshot,\n  typeListForEach,\n  YXmlElementRefID,\n  Snapshot, YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */\n\n/**\n * An YXmlElement imitates the behavior of a\n * https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YXmlElement<KV>}\n   */\n  clone () {\n    /**\n     * @type {YXmlElement<KV>}\n     */\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    object.forEach(attrs, (value, key) => {\n      if (typeof value === 'string') {\n        el.setAttribute(key, value)\n      }\n    })\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return /** @type {any} */ (snapshot ? typeMapGetAllSnapshot(this, snapshot) : typeMapGetAll(this))\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      const value = attrs[key]\n      if (typeof value === 'string') {\n        dom.setAttribute(key, value)\n      }\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n","import {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with which the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","import {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n","import {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n","import {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} whether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","import {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n","import {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n","import {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false })\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()))\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n","import {\n  YText, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */\n  integrate (_transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    const p = /** @type {YText} */ (item.parent)\n    p._searchMarker = null\n    p._hasFormatting = true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON())\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n","import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as env from 'lib0/environment'\nimport * as object from 'lib0/object'\n\nconst isDevMode = env.getVariable('node_env') === 'development'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n    isDevMode && object.deepFreeze(arr)\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n","import {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n","import {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  isDeleted,\n  StackItem, DeleteSet, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\nimport * as array from 'lib0/array'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */\nconst isDeletedByUndoStack = (stack, id) => array.some(stack, /** @param {StackItem} s */ s => isDeleted(s.deletions, id))\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left = null\n  /**\n   * @type {Item|null}\n   */\n  let right\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  } else {\n    right = null\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))) {\n        left = left.right\n        // follow redone\n        while (left.redone) left = getItemCleanStart(transaction, left.redone)\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    } else if (!this.parent) {\n      // only set parent if this shouldn't be garbage collected\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      } else if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {AbstractContent}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} _item\n   */\n  integrate (_transaction, _item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   */\n  delete (_transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} _store\n   */\n  gc (_store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   * @param {number} _offset\n   */\n  write (_encoder, _offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n","import {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","/** eslint-env browser */\n\nexport {\n  Doc,\n  Transaction,\n  YArray as Array,\n  YMap as Map,\n  YText as Text,\n  YXmlText as XmlText,\n  YXmlHook as XmlHook,\n  YXmlElement as XmlElement,\n  YXmlFragment as XmlFragment,\n  YXmlEvent,\n  YMapEvent,\n  YArrayEvent,\n  YTextEvent,\n  YEvent,\n  Item,\n  AbstractStruct,\n  GC,\n  Skip,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentAny,\n  ContentString,\n  ContentType,\n  AbstractType,\n  getTypeChildren,\n  createRelativePositionFromTypeIndex,\n  createRelativePositionFromJSON,\n  createAbsolutePositionFromRelativePosition,\n  compareRelativePositions,\n  AbsolutePosition,\n  RelativePosition,\n  ID,\n  createID,\n  compareIDs,\n  getState,\n  Snapshot,\n  createSnapshot,\n  createDeleteSet,\n  createDeleteSetFromStructStore,\n  cleanupYTextFormatting,\n  snapshot,\n  emptySnapshot,\n  findRootTypeKey,\n  findIndexSS,\n  getItem,\n  getItemCleanStart,\n  getItemCleanEnd,\n  typeListToArraySnapshot,\n  typeMapGetSnapshot,\n  typeMapGetAllSnapshot,\n  createDocFromSnapshot,\n  iterateDeletedStructs,\n  applyUpdate,\n  applyUpdateV2,\n  readUpdate,\n  readUpdateV2,\n  encodeStateAsUpdate,\n  encodeStateAsUpdateV2,\n  encodeStateVector,\n  UndoManager,\n  decodeSnapshot,\n  encodeSnapshot,\n  decodeSnapshotV2,\n  encodeSnapshotV2,\n  decodeStateVector,\n  logUpdate,\n  logUpdateV2,\n  decodeUpdate,\n  decodeUpdateV2,\n  relativePositionToJSON,\n  isDeleted,\n  isParentOf,\n  equalSnapshots,\n  PermanentUserData, // @TODO experimental\n  tryGc,\n  transact,\n  AbstractConnector,\n  logType,\n  mergeUpdates,\n  mergeUpdatesV2,\n  parseUpdateMeta,\n  parseUpdateMetaV2,\n  encodeStateVectorFromUpdate,\n  encodeStateVectorFromUpdateV2,\n  encodeRelativePosition,\n  decodeRelativePosition,\n  diffUpdate,\n  diffUpdateV2,\n  convertUpdateFormatV1ToV2,\n  convertUpdateFormatV2ToV1,\n  obfuscateUpdate,\n  obfuscateUpdateV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  equalDeleteSets,\n  mergeDeleteSets,\n  snapshotContainsUpdate\n} from './internals.js'\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {})\n\nconst importIdentifier = '__ $YJS$ __'\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438')\n}\nglo[importIdentifier] = true\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value ?? undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n\n/**\n * This function bubble-sorts a single item to the correct position. The sort happens in-place and\n * might be useful to ensure that a single item is at the correct position in an otherwise sorted\n * array.\n *\n * @example\n *  const arr = [3, 2, 5]\n *  arr.sort((a, b) => a - b)\n *  arr // => [2, 3, 5]\n *  arr.splice(1, 0, 7)\n *  array.bubbleSortItem(arr, 1, (a, b) => a - b)\n *  arr // => [2, 3, 5, 7]\n *\n * @template T\n * @param {Array<T>} arr\n * @param {number} i\n * @param {(a:T,b:T) => number} compareFn\n */\nexport const bubblesortItem = (arr, i, compareFn) => {\n  const n = arr[i]\n  let j = i\n  // try to sort to the right\n  while (j + 1 < arr.length && compareFn(n, arr[j + 1]) > 0) {\n    arr[j] = arr[j + 1]\n    arr[++j] = n\n  }\n  if (i === j && j > 0) { // no change yet\n    // sort to the left\n    while (j > 0 && compareFn(arr[j - 1], n) > 0) {\n      arr[j] = arr[j - 1]\n      arr[--j] = n\n    }\n  }\n  return j\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { getRandomValues } from 'lib0/webcrypto'\n\nexport const rand = Math.random\n\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0]\n\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/* eslint-env browser */\n\nexport const subtle = crypto.subtle\nexport const getRandomValues = crypto.getRandomValues.bind(crypto)\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */\nexport const all = Promise.all.bind(Promise)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n * @deprecated use untilAsync instead\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* c8 ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {()=>Promise<boolean>|boolean} check\n * @param {number} timeout\n * @param {number} intervalResolution\n * @return {Promise<void>}\n */\nexport const untilAsync = async (check, timeout = 0, intervalResolution = 10) => {\n  const startTime = time.getUnixTime()\n  const noTimeout = timeout <= 0\n  // eslint-disable-next-line no-unmodified-loop-condition\n  while (noTimeout || time.getUnixTime() - startTime <= timeout) {\n    if (await check()) return\n    await wait(intervalResolution)\n  }\n  throw new Error('Timeout')\n}\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, _reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nimport * as math from './math.js'\n\nexport const yotta = 1e24\nexport const zetta = 1e21\nexport const exa = 1e18\nexport const peta = 1e15\nexport const tera = 1e12\nexport const giga = 1e9\nexport const mega = 1e6\nexport const kilo = 1e3\nexport const hecto = 1e2\nexport const deca = 10\nexport const deci = 0.1\nexport const centi = 0.01\nexport const milli = 1e-3\nexport const micro = 1e-6\nexport const nano = 1e-9\nexport const pico = 1e-12\nexport const femto = 1e-15\nexport const atto = 1e-18\nexport const zepto = 1e-21\nexport const yocto = 1e-24\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nexport const prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n)\n  let mult = 0\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--\n    mult--\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++\n    mult++\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as array from './array.js'\nimport * as math from './math.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */\nexport const toBase64UrlEncoded = buf => toBase64(buf).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n\n/**\n * @param {string} base64\n */\nexport const fromBase64UrlEncoded = base64 => fromBase64(base64.replaceAll('-', '+').replaceAll('_', '/'))\n\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */\nexport const toHexString = buf => array.map(buf, b => b.toString(16).padStart(2, '0')).join('')\n\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */\nexport const fromHexString = hex => {\n  const hlen = hex.length\n  const buf = new Uint8Array(math.ceil(hlen / 2))\n  for (let i = 0; i < hlen; i += 2) {\n    buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16)\n  }\n  return buf\n}\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data =>\n  encoding.encode(encoder => encoding.writeAny(encoder, data))\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */\nexport const shiftNBitsLeft = (bs, N) => {\n  if (N === 0) return bs\n  bs = new Uint8Array(bs)\n  bs[0] <<= N\n  for (let i = 1; i < bs.length; i++) {\n    bs[i - 1] |= bs[i] >>> (8 - N)\n    bs[i] <<= N\n  }\n  return bs\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module environment\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase().replaceAll('-', '_')])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {string}\n */\n/* c8 ignore next 5 */\nexport const ensureConf = (name) => {\n  const c = getConf(name)\n  if (c == null) throw new Error(`Expected configuration \"${name.toUpperCase().replaceAll('-', '_')}\"`)\n  return c\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\n/**\n * Color is enabled by default if the terminal supports it.\n *\n * Explicitly enable color using `--color` parameter\n * Disable color using `--no-color` parameter or using `NO_COLOR=1` environment variable.\n * `FORCE_COLOR=1` enables color and takes precedence over all.\n */\nexport const supportsColor = forceColor || (\n  !hasParam('--no-colors') && // @todo deprecate --no-colors\n  !hasConf('no-color') &&\n  (!isNode || process.stdout.isTTY) && (\n    !isNode ||\n    hasParam('--color') ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n  )\n)\n/* c8 ignore stop */\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\nimport * as traits from './traits.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a === b) {\n    return true\n  }\n  if (a == null || b == null || a.constructor !== b.constructor) {\n    return false\n  }\n  if (a[traits.EqualityTraitSymbol] != null) {\n    return a[traits.EqualityTraitSymbol](b)\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @deprecated use object.size instead\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const size = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (size(a) === size(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n\n/**\n * Make an object immutable. This hurts performance and is usually not needed if you perform good\n * coding practices.\n */\nexport const freeze = Object.freeze\n\n/**\n * Make an object and all its children immutable.\n * This *really* hurts performance and is usually not needed if you perform good coding practices.\n *\n * @template {any} T\n * @param {T} o\n * @return {Readonly<T>}\n */\nexport const deepFreeze = (o) => {\n  for (const key in o) {\n    const c = o[key]\n    if (typeof c === 'object' || typeof c === 'function') {\n      deepFreeze(o[key])\n    }\n  }\n  return freeze(o)\n}\n","export const EqualityTraitSymbol = Symbol('Equality')\n\n/**\n * @typedef {{ [EqualityTraitSymbol]:(other:EqualityTrait)=>boolean }} EqualityTrait\n */\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as set from './set.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as common from './logging.common.js'\n\nexport { BOLD, UNBOLD, BLUE, GREY, GREEN, RED, PURPLE, ORANGE, UNCOLOR } from './logging.common.js'\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [common.BOLD]: pair.create('font-weight', 'bold'),\n  [common.UNBOLD]: pair.create('font-weight', 'normal'),\n  [common.BLUE]: pair.create('color', 'blue'),\n  [common.GREEN]: pair.create('color', 'green'),\n  [common.GREY]: pair.create('color', 'grey'),\n  [common.RED]: pair.create('color', 'red'),\n  [common.PURPLE]: pair.create('color', 'purple'),\n  [common.ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [common.UNCOLOR]: pair.create('color', 'black')\n}\n\n/**\n * @param {Array<string|Symbol|Object|number|function():any>} args\n * @return {Array<string|object|number>}\n */\n/* c8 ignore start */\nconst computeBrowserLoggingArgs = (args) => {\n  if (args.length === 1 && args[0]?.constructor === Function) {\n    args = /** @type {Array<string|Symbol|Object|number>} */ (/** @type {[function]} */ (args)[0]())\n  }\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg === undefined) {\n        break\n      }\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\nconst computeLoggingArgs = env.supportsColor\n  ? computeBrowserLoggingArgs\n  : common.computeNoColorLoggingArgs\n/* c8 ignore stop */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(common.ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n/* c8 ignore stop */\n\n/**\n * @param {Error} err\n */\n/* c8 ignore start */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n/* c8 ignore start */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/**\n * @param {function():Node} createNode\n */\n/* c8 ignore next 2 */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = set.create()\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n/* c8 ignore start */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    let arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg === undefined) {\n        arg = 'undefined '\n      }\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n/* c8 ignore stop */\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* c8 ignore start */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('▼')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('▶')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([common.RED, common.BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @param {Element} dom\n */\n/* c8 ignore next */\nexport const createVConsole = (dom) => new VConsole(dom)\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => common.createModuleLogger(print, moduleName)\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* c8 ignore start */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\nexport const createTextNode = text => doc.createTextNode(text)\n\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n/* c8 ignore stop */\n","/**\n * JSON utility functions.\n *\n * @module json\n */\n\n/**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */\nexport const stringify = JSON.stringify\n\n/**\n * Parse JSON object.\n *\n * @param {string} json\n * @return {any}\n */\nexport const parse = JSON.parse\n","/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\nimport * as time from './time.js'\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* c8 ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* c8 ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @param {number} triggerAfter Optional. Trigger callback after a certain amount of time\n *                              without waiting for debounce.\n */\nexport const createDebouncer = (timeout, triggerAfter = -1) => {\n  let timer = -1\n  /**\n   * @type {number?}\n    */\n  let lastCall = null\n  /**\n   * @param {((...args: any)=>void)?} cb function to trigger after debounce. If null, it will reset the\n   *                         debounce.\n   */\n  return cb => {\n    clearTimeout(timer)\n    if (cb) {\n      if (triggerAfter >= 0) {\n        const now = time.getUnixTime()\n        if (lastCall === null) lastCall = now\n        if (now - lastCall > triggerAfter) {\n          lastCall = null\n          timer = /** @type {any} */ (setTimeout(cb, 0))\n          return\n        }\n      }\n      timer = /** @type {any} */ (setTimeout(() => { lastCall = null; cb() }, timeout))\n    } else {\n      lastCall = null\n    }\n  }\n}\n","import * as symbol from './symbol.js'\nimport * as time from './time.js'\nimport * as env from './environment.js'\nimport * as func from './function.js'\nimport * as json from './json.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/* c8 ignore start */\n/**\n * @param {Array<undefined|string|Symbol|Object|number|function():any>} args\n * @return {Array<string|object|number|undefined>}\n */\nexport const computeNoColorLoggingArgs = args => {\n  if (args.length === 1 && args[0]?.constructor === Function) {\n    args = /** @type {Array<string|Symbol|Object|number>} */ (/** @type {[function]} */ (args)[0]())\n  }\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (arg === undefined) {\n      break\n    } else if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg)\n    } else if (arg.constructor === Object) {\n      break\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (_print, moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n        if (args.length === 1 && args[0]?.constructor === Function) {\n          args = args[0]()\n        }\n        const timeNow = time.getUnixTime()\n        const timeDiff = timeNow - lastLoggingTime\n        lastLoggingTime = timeNow\n        _print(\n          color,\n          moduleName,\n          UNCOLOR,\n          ...args.map((arg) => {\n            if (arg != null && arg.constructor === Uint8Array) {\n              arg = Array.from(arg)\n            }\n            const t = typeof arg\n            switch (t) {\n              case 'string':\n              case 'symbol':\n                return arg\n              default: {\n                return json.stringify(arg)\n              }\n            }\n          }),\n          color,\n          ' +' + timeDiff + 'ms'\n        )\n      }\n}\n/* c8 ignore stop */\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","/**\n * @module provider/websocket\n */\n\n/* eslint-env browser */\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as bc from 'lib0/broadcastchannel'\nimport * as time from 'lib0/time'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport * as authProtocol from 'y-protocols/auth'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport { ObservableV2 } from 'lib0/observable'\nimport * as math from 'lib0/math'\nimport * as url from 'lib0/url'\nimport * as env from 'lib0/environment'\n\nexport const messageSync = 0\nexport const messageQueryAwareness = 3\nexport const messageAwareness = 1\nexport const messageAuth = 2\n\n/**\n *                       encoder,          decoder,          provider,          emitSynced, messageType\n * @type {Array<function(encoding.Encoder, decoding.Decoder, WebsocketProvider, boolean,    number):void>}\n */\nconst messageHandlers = []\n\nmessageHandlers[messageSync] = (\n  encoder,\n  decoder,\n  provider,\n  emitSynced,\n  _messageType\n) => {\n  encoding.writeVarUint(encoder, messageSync)\n  const syncMessageType = syncProtocol.readSyncMessage(\n    decoder,\n    encoder,\n    provider.doc,\n    provider\n  )\n  if (\n    emitSynced && syncMessageType === syncProtocol.messageYjsSyncStep2 &&\n    !provider.synced\n  ) {\n    provider.synced = true\n  }\n}\n\nmessageHandlers[messageQueryAwareness] = (\n  encoder,\n  _decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  encoding.writeVarUint(encoder, messageAwareness)\n  encoding.writeVarUint8Array(\n    encoder,\n    awarenessProtocol.encodeAwarenessUpdate(\n      provider.awareness,\n      Array.from(provider.awareness.getStates().keys())\n    )\n  )\n}\n\nmessageHandlers[messageAwareness] = (\n  _encoder,\n  decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  awarenessProtocol.applyAwarenessUpdate(\n    provider.awareness,\n    decoding.readVarUint8Array(decoder),\n    provider\n  )\n}\n\nmessageHandlers[messageAuth] = (\n  _encoder,\n  decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  authProtocol.readAuthMessage(\n    decoder,\n    provider.doc,\n    (_ydoc, reason) => permissionDeniedHandler(provider, reason)\n  )\n}\n\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000\n\n/**\n * @param {WebsocketProvider} provider\n * @param {string} reason\n */\nconst permissionDeniedHandler = (provider, reason) =>\n  console.warn(`Permission denied to access ${provider.url}.\\n${reason}`)\n\n/**\n * @param {WebsocketProvider} provider\n * @param {Uint8Array} buf\n * @param {boolean} emitSynced\n * @return {encoding.Encoder}\n */\nconst readMessage = (provider, buf, emitSynced) => {\n  const decoder = decoding.createDecoder(buf)\n  const encoder = encoding.createEncoder()\n  const messageType = decoding.readVarUint(decoder)\n  const messageHandler = provider.messageHandlers[messageType]\n  if (/** @type {any} */ (messageHandler)) {\n    messageHandler(encoder, decoder, provider, emitSynced, messageType)\n  } else {\n    console.error('Unable to compute message')\n  }\n  return encoder\n}\n\n/**\n * Outsource this function so that a new websocket connection is created immediately.\n * I suspect that the `ws.onclose` event is not always fired if there are network issues.\n *\n * @param {WebsocketProvider} provider\n * @param {WebSocket} ws\n * @param {CloseEvent | null} event\n */\nconst closeWebsocketConnection = (provider, ws, event) => {\n  if (ws === provider.ws) {\n    provider.emit('connection-close', [event, provider])\n    provider.ws = null\n    ws.close()\n    provider.wsconnecting = false\n    if (provider.wsconnected) {\n      provider.wsconnected = false\n      provider.synced = false\n      // update awareness (all users except local left)\n      awarenessProtocol.removeAwarenessStates(\n        provider.awareness,\n        Array.from(provider.awareness.getStates().keys()).filter((client) =>\n          client !== provider.doc.clientID\n        ),\n        provider\n      )\n      provider.emit('status', [{\n        status: 'disconnected'\n      }])\n    } else {\n      provider.wsUnsuccessfulReconnects++\n    }\n    // Start with no reconnect timeout and increase timeout by\n    // using exponential backoff starting with 100ms\n    setTimeout(\n      setupWS,\n      math.min(\n        math.pow(2, provider.wsUnsuccessfulReconnects) * 100,\n        provider.maxBackoffTime\n      ),\n      provider\n    )\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n */\nconst setupWS = (provider) => {\n  if (provider.shouldConnect && provider.ws === null) {\n    const websocket = new provider._WS(provider.url, provider.protocols)\n    websocket.binaryType = 'arraybuffer'\n    provider.ws = websocket\n    provider.wsconnecting = true\n    provider.wsconnected = false\n    provider.synced = false\n\n    websocket.onmessage = (event) => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      const encoder = readMessage(provider, new Uint8Array(event.data), true)\n      if (encoding.length(encoder) > 1) {\n        websocket.send(encoding.toUint8Array(encoder))\n      }\n    }\n    websocket.onerror = (event) => {\n      provider.emit('connection-error', [event, provider])\n    }\n    websocket.onclose = (event) => {\n      closeWebsocketConnection(provider, websocket, event)\n    }\n    websocket.onopen = () => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      provider.wsconnecting = false\n      provider.wsconnected = true\n      provider.wsUnsuccessfulReconnects = 0\n      provider.emit('status', [{\n        status: 'connected'\n      }])\n      // always send sync step 1 when connected\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeSyncStep1(encoder, provider.doc)\n      websocket.send(encoding.toUint8Array(encoder))\n      // broadcast local awareness state\n      if (provider.awareness.getLocalState() !== null) {\n        const encoderAwarenessState = encoding.createEncoder()\n        encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n        encoding.writeVarUint8Array(\n          encoderAwarenessState,\n          awarenessProtocol.encodeAwarenessUpdate(provider.awareness, [\n            provider.doc.clientID\n          ])\n        )\n        websocket.send(encoding.toUint8Array(encoderAwarenessState))\n      }\n    }\n    provider.emit('status', [{\n      status: 'connecting'\n    }])\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n * @param {ArrayBuffer} buf\n */\nconst broadcastMessage = (provider, buf) => {\n  const ws = provider.ws\n  if (provider.wsconnected && ws && ws.readyState === ws.OPEN) {\n    ws.send(buf)\n  }\n  if (provider.bcconnected) {\n    bc.publish(provider.bcChannel, buf, provider)\n  }\n}\n\n/**\n * Websocket Provider for Yjs. Creates a websocket connection to sync the shared document.\n * The document name is attached to the provided url. I.e. the following example\n * creates a websocket connection to http://localhost:1234/my-document-name\n *\n * @example\n *   import * as Y from 'yjs'\n *   import { WebsocketProvider } from 'y-websocket'\n *   const doc = new Y.Doc()\n *   const provider = new WebsocketProvider('http://localhost:1234', 'my-document-name', doc)\n *\n * @extends {ObservableV2<{ 'connection-close': (event: CloseEvent | null,  provider: WebsocketProvider) => any, 'status': (event: { status: 'connected' | 'disconnected' | 'connecting' }) => any, 'connection-error': (event: Event, provider: WebsocketProvider) => any, 'sync': (state: boolean) => any }>}\n */\nexport class WebsocketProvider extends ObservableV2 {\n  /**\n   * @param {string} serverUrl\n   * @param {string} roomname\n   * @param {Y.Doc} doc\n   * @param {object} opts\n   * @param {boolean} [opts.connect]\n   * @param {awarenessProtocol.Awareness} [opts.awareness]\n   * @param {Object<string,string>} [opts.params] specify url parameters\n   * @param {Array<string>} [opts.protocols] specify websocket protocols\n   * @param {typeof WebSocket} [opts.WebSocketPolyfill] Optionall provide a WebSocket polyfill\n   * @param {number} [opts.resyncInterval] Request server state every `resyncInterval` milliseconds\n   * @param {number} [opts.maxBackoffTime] Maximum amount of time to wait before trying to reconnect (we try to reconnect using exponential backoff)\n   * @param {boolean} [opts.disableBc] Disable cross-tab BroadcastChannel communication\n   */\n  constructor (serverUrl, roomname, doc, {\n    connect = true,\n    awareness = new awarenessProtocol.Awareness(doc),\n    params = {},\n    protocols = [],\n    WebSocketPolyfill = WebSocket,\n    resyncInterval = -1,\n    maxBackoffTime = 2500,\n    disableBc = false\n  } = {}) {\n    super()\n    // ensure that serverUrl does not end with /\n    while (serverUrl[serverUrl.length - 1] === '/') {\n      serverUrl = serverUrl.slice(0, serverUrl.length - 1)\n    }\n    this.serverUrl = serverUrl\n    this.bcChannel = serverUrl + '/' + roomname\n    this.maxBackoffTime = maxBackoffTime\n    /**\n     * The specified url parameters. This can be safely updated. The changed parameters will be used\n     * when a new connection is established.\n     * @type {Object<string,string>}\n     */\n    this.params = params\n    this.protocols = protocols\n    this.roomname = roomname\n    this.doc = doc\n    this._WS = WebSocketPolyfill\n    this.awareness = awareness\n    this.wsconnected = false\n    this.wsconnecting = false\n    this.bcconnected = false\n    this.disableBc = disableBc\n    this.wsUnsuccessfulReconnects = 0\n    this.messageHandlers = messageHandlers.slice()\n    /**\n     * @type {boolean}\n     */\n    this._synced = false\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null\n    this.wsLastMessageReceived = 0\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = connect\n\n    /**\n     * @type {number}\n     */\n    this._resyncInterval = 0\n    if (resyncInterval > 0) {\n      this._resyncInterval = /** @type {any} */ (setInterval(() => {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n          // resend sync step 1\n          const encoder = encoding.createEncoder()\n          encoding.writeVarUint(encoder, messageSync)\n          syncProtocol.writeSyncStep1(encoder, doc)\n          this.ws.send(encoding.toUint8Array(encoder))\n        }\n      }, resyncInterval))\n    }\n\n    /**\n     * @param {ArrayBuffer} data\n     * @param {any} origin\n     */\n    this._bcSubscriber = (data, origin) => {\n      if (origin !== this) {\n        const encoder = readMessage(this, new Uint8Array(data), false)\n        if (encoding.length(encoder) > 1) {\n          bc.publish(this.bcChannel, encoding.toUint8Array(encoder), this)\n        }\n      }\n    }\n    /**\n     * Listens to Yjs updates and sends them to remote peers (ws and broadcastchannel)\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._updateHandler = (update, origin) => {\n      if (origin !== this) {\n        const encoder = encoding.createEncoder()\n        encoding.writeVarUint(encoder, messageSync)\n        syncProtocol.writeUpdate(encoder, update)\n        broadcastMessage(this, encoding.toUint8Array(encoder))\n      }\n    }\n    this.doc.on('update', this._updateHandler)\n    /**\n     * @param {any} changed\n     * @param {any} _origin\n     */\n    this._awarenessUpdateHandler = ({ added, updated, removed }, _origin) => {\n      const changedClients = added.concat(updated).concat(removed)\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageAwareness)\n      encoding.writeVarUint8Array(\n        encoder,\n        awarenessProtocol.encodeAwarenessUpdate(awareness, changedClients)\n      )\n      broadcastMessage(this, encoding.toUint8Array(encoder))\n    }\n    this._exitHandler = () => {\n      awarenessProtocol.removeAwarenessStates(\n        this.awareness,\n        [doc.clientID],\n        'app closed'\n      )\n    }\n    if (env.isNode && typeof process !== 'undefined') {\n      process.on('exit', this._exitHandler)\n    }\n    awareness.on('update', this._awarenessUpdateHandler)\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      if (\n        this.wsconnected &&\n        messageReconnectTimeout <\n          time.getUnixTime() - this.wsLastMessageReceived\n      ) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        closeWebsocketConnection(this, /** @type {WebSocket} */ (this.ws), null)\n      }\n    }, messageReconnectTimeout / 10))\n    if (connect) {\n      this.connect()\n    }\n  }\n\n  get url () {\n    const encodedParams = url.encodeQueryParams(this.params)\n    return this.serverUrl + '/' + this.roomname +\n      (encodedParams.length === 0 ? '' : '?' + encodedParams)\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get synced () {\n    return this._synced\n  }\n\n  set synced (state) {\n    if (this._synced !== state) {\n      this._synced = state\n      // @ts-ignore\n      this.emit('synced', [state])\n      this.emit('sync', [state])\n    }\n  }\n\n  destroy () {\n    if (this._resyncInterval !== 0) {\n      clearInterval(this._resyncInterval)\n    }\n    clearInterval(this._checkInterval)\n    this.disconnect()\n    if (env.isNode && typeof process !== 'undefined') {\n      process.off('exit', this._exitHandler)\n    }\n    this.awareness.off('update', this._awarenessUpdateHandler)\n    this.doc.off('update', this._updateHandler)\n    super.destroy()\n  }\n\n  connectBc () {\n    if (this.disableBc) {\n      return\n    }\n    if (!this.bcconnected) {\n      bc.subscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = true\n    }\n    // send sync step1 to bc\n    // write sync step 1\n    const encoderSync = encoding.createEncoder()\n    encoding.writeVarUint(encoderSync, messageSync)\n    syncProtocol.writeSyncStep1(encoderSync, this.doc)\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderSync), this)\n    // broadcast local state\n    const encoderState = encoding.createEncoder()\n    encoding.writeVarUint(encoderState, messageSync)\n    syncProtocol.writeSyncStep2(encoderState, this.doc)\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderState), this)\n    // write queryAwareness\n    const encoderAwarenessQuery = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness)\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessQuery),\n      this\n    )\n    // broadcast local awareness state\n    const encoderAwarenessState = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n    encoding.writeVarUint8Array(\n      encoderAwarenessState,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ])\n    )\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessState),\n      this\n    )\n  }\n\n  disconnectBc () {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, messageAwareness)\n    encoding.writeVarUint8Array(\n      encoder,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ], new Map())\n    )\n    broadcastMessage(this, encoding.toUint8Array(encoder))\n    if (this.bcconnected) {\n      bc.unsubscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = false\n    }\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    this.disconnectBc()\n    if (this.ws !== null) {\n      closeWebsocketConnection(this, this.ws, null)\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true\n    if (!this.wsconnected && this.ws === null) {\n      setupWS(this)\n      this.connectBc()\n    }\n  }\n}\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server should only reply to requests, and not initiate them.\n * Therefore it is necessary that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Does not need to be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport const messagePermissionDenied = 0\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\nexport const writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied)\n  encoding.writeVarString(encoder, reason)\n}\n\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n */\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder))\n  }\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","/**\n * @module bindings/quill\n */\n\nimport * as Y from 'yjs' // eslint-disable-line\n\n/**\n * @typedef {import('y-protocols/awareness').Awareness} Awareness\n\n/**\n * Removes the pending '\\n's if it has no attributes.\n */\nexport const normQuillDelta = delta => {\n  if (delta.length > 0) {\n    const d = delta[delta.length - 1]\n    const insert = d.insert\n    if (d.attributes === undefined && insert !== undefined && insert.slice(-1) === '\\n') {\n      delta = delta.slice()\n      let ins = insert.slice(0, -1)\n      while (ins.slice(-1) === '\\n') {\n        ins = ins.slice(0, -1)\n      }\n      delta[delta.length - 1] = { insert: ins }\n      if (ins.length === 0) {\n        delta.pop()\n      }\n      return delta\n    }\n  }\n  return delta\n}\n\n/**\n * @param {any} quillCursors\n */\nconst updateCursor = (quillCursors, aw, clientId, doc, type) => {\n  try {\n    if (aw && aw.cursor && clientId !== doc.clientID) {\n      const user = aw.user || {}\n      const color = user.color || '#ffa500'\n      const name = user.name || `User: ${clientId}`\n      quillCursors.createCursor(clientId.toString(), name, color)\n      const anchor = Y.createAbsolutePositionFromRelativePosition(Y.createRelativePositionFromJSON(aw.cursor.anchor), doc)\n      const head = Y.createAbsolutePositionFromRelativePosition(Y.createRelativePositionFromJSON(aw.cursor.head), doc)\n      if (anchor && head && anchor.type === type) {\n        quillCursors.moveCursor(clientId.toString(), { index: anchor.index, length: head.index - anchor.index })\n      }\n    } else {\n      quillCursors.removeCursor(clientId.toString())\n    }\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport class QuillBinding {\n  /**\n   * @param {Y.Text} type\n   * @param {any} quill\n   * @param {Awareness} [awareness]\n   */\n  constructor (type, quill, awareness) {\n    const doc = /** @type {Y.Doc} */ (type.doc)\n    this.type = type\n    this.doc = doc\n    this.quill = quill\n    const quillCursors = quill.getModule('cursors') || null\n    this.quillCursors = quillCursors\n    // This object contains all attributes used in the quill instance\n    this._negatedUsedFormats = {}\n    this.awareness = awareness\n    this._awarenessChange = ({ added, removed, updated }) => {\n      const states = /** @type {Awareness} */ (awareness).getStates()\n      added.forEach(id => {\n        updateCursor(quillCursors, states.get(id), id, doc, type)\n      })\n      updated.forEach(id => {\n        updateCursor(quillCursors, states.get(id), id, doc, type)\n      })\n      removed.forEach(id => {\n        quillCursors.removeCursor(id.toString())\n      })\n    }\n    /**\n     * @param {Y.YTextEvent} event\n     */\n    this._typeObserver = event => {\n      if (event.transaction.origin !== this) {\n        const eventDelta = event.delta\n        // We always explicitly set attributes, otherwise concurrent edits may\n        // result in quill assuming that a text insertion shall inherit existing\n        // attributes.\n        const delta = []\n        for (let i = 0; i < eventDelta.length; i++) {\n          const d = eventDelta[i]\n          if (d.insert !== undefined) {\n            delta.push(Object.assign({}, d, { attributes: Object.assign({}, this._negatedUsedFormats, d.attributes || {}) }))\n          } else {\n            delta.push(d)\n          }\n        }\n        quill.updateContents(delta, this)\n      }\n    }\n    type.observe(this._typeObserver)\n    this._quillObserver = (eventType, delta, state, origin) => {\n      if (delta && delta.ops) {\n        // update content\n        const ops = delta.ops\n        ops.forEach(op => {\n          if (op.attributes !== undefined) {\n            for (const key in op.attributes) {\n              if (this._negatedUsedFormats[key] === undefined) {\n                this._negatedUsedFormats[key] = false\n              }\n            }\n          }\n        })\n        if (origin !== this) {\n          doc.transact(() => {\n            type.applyDelta(ops)\n          }, this)\n        }\n      }\n      // always check selection\n      if (awareness && quillCursors) {\n        const sel = quill.getSelection()\n        const aw = /** @type {any} */ (awareness.getLocalState())\n        if (sel === null) {\n          if (awareness.getLocalState() !== null) {\n            awareness.setLocalStateField('cursor', /** @type {any} */ (null))\n          }\n        } else {\n          const anchor = Y.createRelativePositionFromTypeIndex(type, sel.index)\n          const head = Y.createRelativePositionFromTypeIndex(type, sel.index + sel.length)\n          if (!aw || !aw.cursor || !Y.compareRelativePositions(anchor, aw.cursor.anchor) || !Y.compareRelativePositions(head, aw.cursor.head)) {\n            awareness.setLocalStateField('cursor', {\n              anchor,\n              head\n            })\n          }\n        }\n        // update all remote cursor locations\n        awareness.getStates().forEach((aw, clientId) => {\n          updateCursor(quillCursors, aw, clientId, doc, type)\n        })\n      }\n    }\n    quill.on('editor-change', this._quillObserver)\n    // This indirectly initializes _negatedUsedFormats.\n    // Make sure that this call this after the _quillObserver is set.\n    quill.setContents(type.toDelta(), this)\n    // init remote cursors\n    if (quillCursors !== null && awareness) {\n      awareness.getStates().forEach((aw, clientId) => {\n        updateCursor(quillCursors, aw, clientId, doc, type)\n      })\n      awareness.on('change', this._awarenessChange)\n    }\n  }\n\n  destroy () {\n    this.type.unobserve(this._typeObserver)\n    this.quill.off('editor-change', this._quillObserver)\n    if (this.awareness) {\n      this.awareness.off('change', this._awarenessChange)\n    }\n  }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { Polling } from \"./polling.js\";\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\nexport class Fetch extends Polling {\n    doPoll() {\n        this._fetch()\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch read error\", res.status, res);\n            }\n            res.text().then((data) => this.onData(data));\n        })\n            .catch((err) => {\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data)\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch write error\", res.status, res);\n            }\n            callback();\n        })\n            .catch((err) => {\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) {\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        }\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\n        }).then((res) => {\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n"],"names":["log"],"version":3,"file":"server.36960861.js.map","sourceRoot":"/__parcel_source_root/"}